<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.ssmtest.mapper.CustomerMapper">

    <!-- resultMap用于实现映射结果集 -->
    <resultMap id="BaseResultMap" type="com.example.ssmtest.pojo.Customer">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="telephone" property="telephone" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
    </resultMap>

    <!-- 客户信息保存的方法 -->
    <insert id="create" parameterType="com.example.ssmtest.pojo.Customer">
        insert into
        tb_customer(
        name,
        telephone,
        address,
        remark)
        values(
        #{name},
        #{telephone},
        #{address},
        #{remark}
        );
    </insert>

    <!-- 根据id删除信息的方法 -->
    <delete id="delete" parameterType="Long">
        delete from tb_customer where id = #{id}
    </delete>

    <!-- 根据客户id查询客户信息的方法 -->
    <select id="findById" parameterType="Long" resultType="com.example.ssmtest.pojo.Customer">
        select * from tb_customer where id = #{id}
    </select>

    <!-- 更新客户信息的方法 -->
    <update id="update" parameterType="com.example.ssmtest.pojo.Customer">
        update tb_customer set
        id = #{id},
        name = #{name},
        telephone = #{telephone},
        address = #{address},
        remark = #{remark}
        where id = #{id}
    </update>

    <!-- 分页-条件查询 -->
    <select id="findByPage" parameterType="com.example.ssmtest.pojo.Customer" resultMap="BaseResultMap">
        SELECT * FROM tb_customer WHERE 1=1
        <if test="name != null">
            AND name LIKE CONCAT('%', #{name}, '%')
        </if>
        <if test="telephone != null">
            AND telephone LIKE CONCAT('%', #{telephone}, '%')
        </if>
    </select>

</mapper>